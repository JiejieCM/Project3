1、	问题说明
  In a box(3D) bounded by [-1, 1], given m balloons(they cannot overlap) with variable radio r and position mu. 
  And some tiny blocks are in the box at given position {d};balloons cannot overlap with these blocks. find the optimal value
  of r and mu which maximizes sum r^2
2、任务分配
product owner：蔡敏、陈丽娇
QA:蔡敏
算法分析：陈丽娇
程序编写：蔡敏、陈丽娇
3、算法分析
•	将所有的面，点，球抽象为‘限制’，而很容易得知，在满足题设条件的球，必定与四个限制‘相切’（面相切、点在球面上、两个球相切）。
•	所以这个问题就转换成了，求出，所有四个限制的组合，求出每一个组合中满足条件的球，找到其中半径最大的那个球。
•	那么开始具体过程
i.	传进初始的限制list（即四条的限制，或者需要添加的障碍点）、你初始添加的圆list（默认为空）、需求的圆的个数number
ii.	如果圆的列表长度达到了需要的个数，将结果返回，反之继续。
iii.	求目前最大的圆将圆添加进限制列表以及圆列表，将这两个量连同需要圆个数记录下来返回步骤2。
关于如何求最大的圆：
a.	得到所有的四个限制的组合。
b.	求出每个组合中满足条件的圆。
c.	比较得出最大的圆。
iv.	得出结果，进行数据展示以及可视化。
•	关于优化空间：
o	求四个限制组合以及最大圆的过程，可以使用动态规划，可以大幅度降低计算量。
o	目前解方程这个过程是通过库计算的，理论上可以通过手算获取最后的结果表达式，可以大幅降低计算量。
o	可以将限制的组合，优化为区域，区域间不重复，可以大幅降低计算量，但需要额外判断。
4、测试
  输入相应的圆的数目和点的位置，如：m=1,1个点(0, 0, 0)正确的输出结果应该为r=0.64,考虑到计算机计算存在误差，输出有可能不为整数。
5、实验结果
   

 
5、结论
  该算法能有效解决正方形内放圆和点的问题，由于计算机的运算存在一定误差，所以输出结果存在多位小数，在测试用例输入m=1和1个端点的位置后，理论结果为r=0.64，这与运行结果接近，故该程序有效。
